function updateProgressBar(d)

% Create variables
config_count = (d.primvar_sel - 1) * d.conf_len + d.sel;
sim_count = config_count + (d.iter - 1) * d.prvr_len * d.conf_len;
config_length = d.prvr_len * d.conf_len;
sim_length = d.num_iters * config_length;

pct = (sim_count / sim_length) * 100;
bar_len = 50;
filled_len = round(bar_len * sim_count / sim_length);
bar = [repmat('=', 1, filled_len), repmat(' ', 1, bar_len - filled_len)];

% Clear screen and print formatted simulation status
clc;
fprintf("RUNNING PROFILE %d - ITERATION %d of %d\n",d.profile_sel,d.iter,d.num_iters)
fprintf("(%d/%d) Training/testing model using %s.%s waveforms\n", ...
    (d.primvar_sel-1)*length(d.configs) + d.sel, ...
    length(d.configs)*length(d.primary_vals), ...
    d.dataset, ...
    d.signal_sel)
fprintf("        Using %s-based training with a %.2f probability threshold...\n",...
    d.testing_type, ...
    d.probability_cutoff);
fprintf("        Testing for %s status (%s or %s), %s = %s...\n",...
    d.group_category,...
    d.null_group,...
    d.hypo_group,...
    d.group_type,...
    d.type_sel);
if d.group_value ~= "NA"
    fprintf("        Grouping by %s (levels [%s] vs. level [%s]),\n",...
        d.group_value,...
        num2str(d.null_val),...
        num2str(d.hypo_val));
end
if ~isempty(d.exclude_patients)
    fprintf("        Excluding patients: [");
    for i = 1:length(d.exclude_patients)
        fprintf("%s", d.exclude_patients(i));
        if i ~= length(d.exclude_patients)
            fprintf(", ")
        end
    end
    fprintf("]\n")
end
fprintf("        %d second window duration, %d second time shift,\n",...
    d.window_duration,...
    d.tshift...
    );
fprintf("        %d Hz cutoff filter, alpha = %.1f\n\n",...
    d.frequency_limit,...
    d.alpha...
    );

% Print progress bar
fprintf("Progress: [%s] %3.0f%% (%d/%d)\n\n", ...
    bar, pct, sim_count, sim_length);
end